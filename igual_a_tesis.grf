# Meter exactamente las mismas regulaciones que en la tesis

# -------------------------- Name and order of genes ------------------------- #
genes = {A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T}


# -------------------------------- Regulations ------------------------------- #
# Mandatory regulations 
# known = {P-|R,B->E,B->C,B->F,B->D,B-|I,S->S,S-|T,E->F,E-|T,J->T,J->F,J-|P,J-|I,J-|G,C->D,Q->J,Q-|G,A->B,A->A,I-|F,L->P,L->J,L->H,G-|T,F->I,F->G,F->R,F->H,F-|P,F-|J,R->S,O-|I,N->G,N-|J,N-|M,M->N,M->M,K->L,K->K,D-|A,H->I,H-|B,H-|E,H-|C,H-|L,H-|F,H-|D}
# All regulations:
known = {P-|R,B->E,B->C,B->F,B->D,B-|I,S->S,S-|T,E->F,E-|T,J->T,J->F,J-|P,J-|I,J-|G,C->D,Q->J,Q-|G,A->B,A->A,I-|F,L->P,L->J,L->H,G-|T,F->I,F->G,F->R,F->H,F-|P,F-|J,R->S,O-|I,N->G,N-|J,N-|M,M->N,M->M,K->L,K->K,D-|A,H->I,H-|B,H-|E,H-|C,H-|L,H-|F,H-|D,P->L,S-|Q,S-|D,S-|H,J->Q,J-|O,T-|R,C->F,C-|I,A->S,A->C,A-|I,A-|H,L-|K,F->O,N->F,D-|S,D-|R,P-|P}

###  Hypothetical Regulations
# hypothetical = {P->L,S-|Q,S-|D,S-|H,J->Q,J-|O,T-|R,C->F,C-|I,A->S,A->C,A-|I,A-|H,L-|K,F->O,N->F,D-|S,D-|R,P-|P}
# Las que se sacaron por info contradictoria en tesis:
# hypothetical = {P-|P,A->R,H-|O,A->D}

# ----------------------------- Set of attractors ---------------------------- #
# ----------------- Guardados en Spreadsheet Búsqueda radial ----------------- #
# Figura 17 - A=1
    # Atractores: arresto 1 y apoptosis 1
# fixed-points(A)={11111110000000100000,11101110000000100110}
# fixed-points()={00000000100000000001}


# ---------------------------------- Options --------------------------------- #
allow.ambiguity = false             # toda regulación tiene únicamente un signo posible
allow.additional.states = true     # generar el conjunto exacto de estados indicados para cada situación
allow.additional.cycles = true     # permitir o no cAos extra (además de los que se hayan definido en cycles() )
allow.hypotheses = false             # activar las regulaciones hipotéticas indicadas arriba
block.steady.a.posteriori = false   # método de bloquear estados no deseados
divide.query.by.topology = false     # análisis radial
# topology.iterator.type = radial     # análisis radial
# topological.distance.radius = 4     # radio máximo de búsqueda
limit.boolean.networks = 1          # limitar la búsqueda hasta haber encontrado cierto número de redes posibles